{"ast":null,"code":"var _jsxFileName = \"/Users/luonghuuchung/Desktop/WORKS/PROGRAMING/PROJECTS/REACT/react-movies/src/routes/AdminRoute.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\n\n// Component này dùng để kiểm tra xem users đăng nhập vào Admin có hợp lệ hay không?\n// Nếu là admin mới cho đăng nhập vào trang     \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminRoute = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  // Thực hiện logic kiểm tra \n\n  // B1: Kết nối tới redux store lấy thông tin user đang đăng nhập\n  const {\n    user\n  } = useSelector(state => state.auth);\n\n  // B2: Kiểm tra xem user có phải là admin hay không(Bước này sẽ sử dụng khi )\n  if (!user || user.maLoaiNguoiDung !== \"QuanTri\") {\n    // chưa đăng nhập hoặc user không phải là ADMIN\n    // ==> Redirect về trang not found \n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/not-found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 16\n    }, this);\n  }\n  return children;\n};\n_s(AdminRoute, \"HA6wZhGeXNR9tzJ3aDGGsGCdOyI=\", false, function () {\n  return [useSelector];\n});\n_c = AdminRoute;\nexport default AdminRoute;\nvar _c;\n$RefreshReg$(_c, \"AdminRoute\");","map":{"version":3,"names":["React","useSelector","Navigate","jsxDEV","_jsxDEV","AdminRoute","_ref","_s","children","user","state","auth","maLoaiNguoiDung","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/luonghuuchung/Desktop/WORKS/PROGRAMING/PROJECTS/REACT/react-movies/src/routes/AdminRoute.jsx"],"sourcesContent":["import React from 'react';\nimport { useSelector } from \"react-redux\";\n\nimport { Navigate } from \"react-router-dom\";\n\n// Component này dùng để kiểm tra xem users đăng nhập vào Admin có hợp lệ hay không?\n// Nếu là admin mới cho đăng nhập vào trang     \nconst AdminRoute = ({children}) => {\n    // Thực hiện logic kiểm tra \n\n    // B1: Kết nối tới redux store lấy thông tin user đang đăng nhập\n    const { user } = useSelector((state) => state.auth);\n\n    // B2: Kiểm tra xem user có phải là admin hay không(Bước này sẽ sử dụng khi )\n    if(!user || user.maLoaiNguoiDung !== \"QuanTri\") {\n        // chưa đăng nhập hoặc user không phải là ADMIN\n        // ==> Redirect về trang not found \n        return < Navigate to=\"/not-found\"/>\n    }\n    return children;\n}\n\nexport default AdminRoute;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AAEzC,SAASC,QAAQ,QAAQ,kBAAkB;;AAE3C;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,UAAU,GAAGC,IAAA,IAAgB;EAAAC,EAAA;EAAA,IAAf;IAACC;EAAQ,CAAC,GAAAF,IAAA;EAC1B;;EAEA;EACA,MAAM;IAAEG;EAAK,CAAC,GAAGR,WAAW,CAAES,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;;EAEnD;EACA,IAAG,CAACF,IAAI,IAAIA,IAAI,CAACG,eAAe,KAAK,SAAS,EAAE;IAC5C;IACA;IACA,oBAAOR,OAAA,CAAEF,QAAQ;MAACW,EAAE,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;EACvC;EACA,OAAOT,QAAQ;AACnB,CAAC;AAAAD,EAAA,CAbKF,UAAU;EAAA,QAIKJ,WAAW;AAAA;AAAAiB,EAAA,GAJ1Bb,UAAU;AAehB,eAAeA,UAAU;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}