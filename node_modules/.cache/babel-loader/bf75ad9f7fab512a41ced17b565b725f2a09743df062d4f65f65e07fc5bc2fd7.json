{"ast":null,"code":"// setup cấu hình api mặc định để sử dụng\nimport axios from \"axios\";\nimport store from \"../stores\";\nconst axiosClient = axios.create({\n  // Đoạn đầu của 1 API mặc định\n  baseURL: \"link mặc định\",\n  // URL được cấp bởi trung tâm\n  // setup header có token bảo mật\n  headers: {\n    TokenSecurity: \"add later\" // sẽ thêm TokenSecurity khi có được từ Cybersoft\n  }\n});\n// Sử dụng kĩ thuật request Intercepter\n\naxiosClient.interceptors.request.use(config => {\n  // Thay đổi config request trước khi gửi lên server\n  // Kết nối tới redux store lấy thông tin đăng nhâp users\n  const {\n    user\n  } = store.getState().auth;\n  // Lấy key accessToken    \n});\n\n// sử dụng kĩ thuật interceptor của thư viện axios ==> response Intecepter\naxiosClient.interceptors.response.use(reponse => {\n  // thành công\n  return reponse.data.content;\n},\n// thất bại\nerror => {\n  // format error trước khi trả content cho nới gọi response\n  return Promise.reject(error.response.data.content);\n});\nexport default axiosClient;","map":{"version":3,"names":["axios","store","axiosClient","create","baseURL","headers","TokenSecurity","interceptors","request","use","config","user","getState","auth","response","reponse","data","content","error","Promise","reject"],"sources":["/Users/luonghuuchung/Desktop/WORKS/PROGRAMING/PROJECTS/REACT/react-movies/src/apis/axiosClient.js"],"sourcesContent":["// setup cấu hình api mặc định để sử dụng\nimport axios from \"axios\";\nimport store from \"../stores\"\n\nconst axiosClient = axios.create({\n  // Đoạn đầu của 1 API mặc định\n  baseURL: \"link mặc định\", // URL được cấp bởi trung tâm\n  // setup header có token bảo mật\n  headers: {\n    TokenSecurity: \"add later\", // sẽ thêm TokenSecurity khi có được từ Cybersoft\n  },\n});\n// Sử dụng kĩ thuật request Intercepter\n\naxiosClient.interceptors.request.use(\n  (config) => {\n    // Thay đổi config request trước khi gửi lên server\n    // Kết nối tới redux store lấy thông tin đăng nhâp users\n    const { user } = store.getState().auth;\n    // Lấy key accessToken    \n  }\n);\n\n// sử dụng kĩ thuật interceptor của thư viện axios ==> response Intecepter\naxiosClient.interceptors.response.use(\n  (reponse) => {\n    // thành công\n    return reponse.data.content;\n  },\n  // thất bại\n  (error) => {\n    // format error trước khi trả content cho nới gọi response\n    return Promise.reject(error.response.data.content);\n  }\n);\n\nexport default axiosClient;\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,WAAW;AAE7B,MAAMC,WAAW,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC/B;EACAC,OAAO,EAAE,eAAe;EAAE;EAC1B;EACAC,OAAO,EAAE;IACPC,aAAa,EAAE,WAAW,CAAE;EAC9B;AACF,CAAC,CAAC;AACF;;AAEAJ,WAAW,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACjCC,MAAM,IAAK;EACV;EACA;EACA,MAAM;IAAEC;EAAK,CAAC,GAAGV,KAAK,CAACW,QAAQ,EAAE,CAACC,IAAI;EACtC;AACF,CAAC,CACF;;AAED;AACAX,WAAW,CAACK,YAAY,CAACO,QAAQ,CAACL,GAAG,CAClCM,OAAO,IAAK;EACX;EACA,OAAOA,OAAO,CAACC,IAAI,CAACC,OAAO;AAC7B,CAAC;AACD;AACCC,KAAK,IAAK;EACT;EACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAACJ,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAC;AACpD,CAAC,CACF;AAED,eAAef,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}