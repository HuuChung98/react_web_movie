{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport authAPI from \"../../../apis/auth\";\nconst initialState = {\n  // user: null,\n  user: JSON.parse(localStorage.getItem('user')) || null,\n  isLoading: false,\n  error: null\n};\nexport const register = createAsyncThunk(\"auth/register\",\n// prefix (tiền tố)\nasync values => {\n  return await authAPI.register(values);\n});\nexport const login = createAsyncThunk(\"auth/login\", async values => {\n  // Nếu sử dụng return thì sẽ ko giũ trạng thái đăng nhập khi refesh trang web\n  // return await authAPI.login(values);\n\n  // bóc tách data để dùng data lưu trữ thông tin đăng nhập trên localStorage nhằm mục đích không cần đăng nhập khi refesh trang web hoặc tắt trang web \n  const {\n    data\n  } = await authAPI.login(values);\n  localStorage.setItem('user', JSON.stringify(data));\n  return data;\n});\nconst authSlice = createSlice({\n  name: \"auth\",\n  // key định danh cho slice( phải là duy nhất)\n  initialState,\n  extraReducers: {\n    [login.pending]: state => {\n      return {\n        ...state,\n        isLoading: true\n      };\n    },\n    [login.fulfilled]: (state, action) => {\n      return {\n        ...state,\n        isLoading: false,\n        user: action.payload\n      };\n    },\n    [login.rejected]: (state, action) => {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.error\n      };\n    },\n    [register.pending]: state => {\n      return {\n        ...state,\n        isLoading: true\n      };\n    },\n    [register.fulfilled]: (state, action) => {\n      return {\n        ...state,\n        isLoading: false\n      };\n    },\n    [register.rejected]: (state, action) => {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.error\n      };\n    }\n  }\n});\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","authAPI","initialState","user","JSON","parse","localStorage","getItem","isLoading","error","register","values","login","data","setItem","stringify","authSlice","name","extraReducers","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["/Users/luonghuuchung/Desktop/WORKS/PROGRAMING/PROJECTS/REACT/react-movies/src/modules/Auth/slices/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport authAPI from \"../../../apis/auth\";\n\nconst initialState = {\n  // user: null,\n  user: JSON.parse(localStorage.getItem('user')) || null,\n  isLoading: false,\n  error: null,\n};\n\nexport const register = createAsyncThunk(\n   \"auth/register\",   // prefix (tiền tố)\n    async (values) => {\n        return await authAPI.register(values);\n});\n\nexport const login = createAsyncThunk(\n    \"auth/login\", \n    async (values) => {\n        // Nếu sử dụng return thì sẽ ko giũ trạng thái đăng nhập khi refesh trang web\n        // return await authAPI.login(values);\n\n        // bóc tách data để dùng data lưu trữ thông tin đăng nhập trên localStorage nhằm mục đích không cần đăng nhập khi refesh trang web hoặc tắt trang web \n        const { data } = await authAPI.login(values);\n        localStorage.setItem('user', JSON.stringify( data ));\n        return data;\n});\n\nconst authSlice = createSlice({\n  name: \"auth\", // key định danh cho slice( phải là duy nhất)\n  initialState,\n  extraReducers: {\n    [login.pending]: (state) => {\n      return { ...state, isLoading: true };\n    },\n    [login.fulfilled]: (state, action) => {\n      return { ...state, isLoading: false, user: action.payload };\n    },\n    [login.rejected]: (state, action) => {\n      return { ...state, isLoading: false, error: action.error };\n    },\n\n    [register.pending]: (state) => {\n      return { ...state, isLoading: true };\n    },\n    [register.fulfilled]: (state, action) => {\n      return { ...state, isLoading: false };\n    },\n\n    [register.rejected]: (state, action) => {\n      return { ...state, isLoading: false, error: action.error };\n    },\n  },\n});\n\nexport default authSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,OAAO,MAAM,oBAAoB;AAExC,MAAMC,YAAY,GAAG;EACnB;EACAC,IAAI,EAAEC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,IAAI;EACtDC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAGV,gBAAgB,CACrC,eAAe;AAAI;AAClB,MAAOW,MAAM,IAAK;EACd,OAAO,MAAMV,OAAO,CAACS,QAAQ,CAACC,MAAM,CAAC;AAC7C,CAAC,CAAC;AAEF,OAAO,MAAMC,KAAK,GAAGZ,gBAAgB,CACjC,YAAY,EACZ,MAAOW,MAAM,IAAK;EACd;EACA;;EAEA;EACA,MAAM;IAAEE;EAAK,CAAC,GAAG,MAAMZ,OAAO,CAACW,KAAK,CAACD,MAAM,CAAC;EAC5CL,YAAY,CAACQ,OAAO,CAAC,MAAM,EAAEV,IAAI,CAACW,SAAS,CAAEF,IAAI,CAAE,CAAC;EACpD,OAAOA,IAAI;AACnB,CAAC,CAAC;AAEF,MAAMG,SAAS,GAAGjB,WAAW,CAAC;EAC5BkB,IAAI,EAAE,MAAM;EAAE;EACdf,YAAY;EACZgB,aAAa,EAAE;IACb,CAACN,KAAK,CAACO,OAAO,GAAIC,KAAK,IAAK;MAC1B,OAAO;QAAE,GAAGA,KAAK;QAAEZ,SAAS,EAAE;MAAK,CAAC;IACtC,CAAC;IACD,CAACI,KAAK,CAACS,SAAS,GAAG,CAACD,KAAK,EAAEE,MAAM,KAAK;MACpC,OAAO;QAAE,GAAGF,KAAK;QAAEZ,SAAS,EAAE,KAAK;QAAEL,IAAI,EAAEmB,MAAM,CAACC;MAAQ,CAAC;IAC7D,CAAC;IACD,CAACX,KAAK,CAACY,QAAQ,GAAG,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACnC,OAAO;QAAE,GAAGF,KAAK;QAAEZ,SAAS,EAAE,KAAK;QAAEC,KAAK,EAAEa,MAAM,CAACb;MAAM,CAAC;IAC5D,CAAC;IAED,CAACC,QAAQ,CAACS,OAAO,GAAIC,KAAK,IAAK;MAC7B,OAAO;QAAE,GAAGA,KAAK;QAAEZ,SAAS,EAAE;MAAK,CAAC;IACtC,CAAC;IACD,CAACE,QAAQ,CAACW,SAAS,GAAG,CAACD,KAAK,EAAEE,MAAM,KAAK;MACvC,OAAO;QAAE,GAAGF,KAAK;QAAEZ,SAAS,EAAE;MAAM,CAAC;IACvC,CAAC;IAED,CAACE,QAAQ,CAACc,QAAQ,GAAG,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACtC,OAAO;QAAE,GAAGF,KAAK;QAAEZ,SAAS,EAAE,KAAK;QAAEC,KAAK,EAAEa,MAAM,CAACb;MAAM,CAAC;IAC5D;EACF;AACF,CAAC,CAAC;AAEF,eAAeO,SAAS,CAACS,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}